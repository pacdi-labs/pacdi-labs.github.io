{"version":3,"sources":["store/auth/index.ts","store/index.ts","store/api/index.ts","styles/auth/index.tsx","components/Auth/Login/Login.tsx","data/resources.js","store/labs/oas.ts","utils/index.ts","styles/common/pacdi_colors.js","styles/App/Carousel.tsx","components/Navigation/ArrowButton/index.tsx","styles/App/Activity.tsx","components/Main/Activity/ActivityGrid.tsx","components/Main/Activity/ActivityList.tsx","components/Main/Activity/index.tsx","components/Main/Activity/ActivitySimple.tsx","components/Main/Main.tsx","styles/common/variables.js","styles/App/index.tsx","components/Navigation/Navigation.tsx","components/UserAccount/UserAccount.tsx","components/activities/utils/IFrame.tsx","styles/common/index.tsx","components/activities/laboratories/ObjectDetail/InstructionsMessage.tsx","components/activities/laboratories/ObjectDetail/ObjectDetail.tsx","components/activities/laboratories/ActivityList/index.tsx","components/routes/AppRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["defaultUser","id","username","password","name","lastname","enrollment","type","currentUser","atom","isTeacher","get","isLoggedIn","logout","_","set","loadingAtom","API_URL","process","fetchLogin","_get","data","a","body","JSON","stringify","fetch","method","headers","response","json","user","lab","console","log","Container","styled","Segment","WelcomeImg","Image","UazLogoImg","Login","history","useState","setUsername","setPassword","useAtom","loading","login","nonEmpties","filter","Boolean","length","useEffect","push","Grid","columns","stackable","Row","Column","align","src","Form","FormGroup","Input","label","value","onChange","e","target","Button","color","disabled","onClick","resources","url","image","teacherOnly","oasAtom","oas","resourcesAtom","teacherInSession","r","oasNamesAtom","Object","keys","carouselActivitiesAtom","resNames","map","oaNames","title","currentObjectAtom","level","surveyUrl","isMobileScreen","window","innerWidth","capitalize","cad","replace","letter","toUpperCase","pacdiColors","brown_0","brown_1","brown_2","brown_3","brown_4","golden_0","golden_1","golden_2","golden_3","golden_4","purple_0","purple_1","purple_2","purple_3","purple_4","blue_0","blue_1","blue_2","blue_3","blue_4","Carousel","ReactCarousel","ArrowButton","icon","circular","size","div","props","flexDirection","isMobile","ImageLink","currentLevel","skill","alt","as","Link","to","ActivityGrid","width","ActivityList","Divider","List","divided","verticalAlign","Item","avatar","Content","Header","Activity","setIsMobile","onRezise","addEventListener","removeEventListener","ActivitySimple","href","Main","current","setCurrent","activityNames","currentLS","localStorage","getItem","index","Number","options","key","text","OPTIONS_SIZE","onChangeItem","setItem","emulateTouch","useKeyboardArrows","showThumbs","showArrows","selectedItem","showStatus","children","activity","textAlign","Dropdown","selection","colors","blue","NavMenu","Menu","NavLink","LogoNavImage","img","RightFloatButton","withRouter","loggedIn","logoutUser","pointing","secondary","exact","position","className","Account","height","innerHeight","IFrame","SpacedContainer","InstructionsMessage","hasLink","centered","WorkCompleteMessage","rel","ObjectDetail","isObjectOpen","setIsObjectOpen","finished","setFinished","currentOA","path","style","paddingTop","fitted","basic","Group","compact","match","params","listOAs","setCurrentOA","ObjectList","list","object","setCurrentObject","cursor","Icon","AppRouter","basename","REACT_APP_ROUTER_BASE","fallback","component","UserAccount","App","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.520c2fa2.chunk.js","sourcesContent":["import { atom } from 'jotai'\nimport { User } from './types'\n\nconst defaultUser: User = {\n  id: 0,\n  username: '',\n  password: '',\n  name: 'test',\n  lastname: '',\n  enrollment: '',\n  type: 'Guest'\n}\n\nexport const currentUser = atom(defaultUser)\nexport const isTeacher = atom((get) => get(currentUser).type === 'Teacher')\nexport const isLoggedIn = atom((get) => {\n  const user = get(currentUser)\n  const loggedIn = user.type !== 'Guest'\n  return loggedIn\n})\nexport const logout = atom(null, (_, set) => set(currentUser, defaultUser))\n","import { atom } from 'jotai'\n\nexport * from './auth'\n\nexport const loadingAtom = atom(false)\n","import { atom } from 'jotai'\nimport { loadingAtom } from 'store'\nimport { currentUser } from 'store/auth'\nimport { User, UserBase } from 'store/auth/types'\nimport { LabActivity, LabActivityBase } from 'store/labs/types'\n\nconst API_URL = process.env.REACT_APP_API\n\nexport const fetchLogin = atom(null, async (_get, set, data: UserBase) => {\n  set(loadingAtom, true)\n  const body = JSON.stringify(data)\n\n  const response = await fetch(`${API_URL}/auth/login`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body\n  })\n\n  const user: User = await response.json()\n  set(currentUser, user)\n  set(loadingAtom, false)\n})\n\nexport const fetchSaveLab = atom(null, async (_get, set, data: LabActivityBase) => {\n  set(loadingAtom, true)\n  const body = JSON.stringify(data)\n  const response = await fetch(`${API_URL}/student/save-lab`, {\n    method: 'POST',\n    body\n  })\n  const lab: LabActivity = await response.json()\n  console.log('Stored activity', lab)\n  set(loadingAtom, false)\n})\n","import styled from 'styled-components'\nimport { Segment, Image } from 'semantic-ui-react'\n\nconst Container = styled(Segment)`\n  display: flex !important;\n  flex-grow: 1;\n  flex-direction: column;\n  margin: 0 !important;\n  align-items: center;\n  justify-content: center;\n  background-color: #b5c7e0 !important;\n`\nconst WelcomeImg = styled(Image)`\n  width: 440px !important;\n`\nconst UazLogoImg = styled(Image)`\n  width: 190px !important;\n`\nexport { Container, WelcomeImg, UazLogoImg }\n","import React, { useState, useEffect } from 'react'\nimport { useAtom } from 'jotai'\nimport { Grid, Button, Form, FormGroup } from 'semantic-ui-react'\nimport { RouteChildrenProps } from 'react-router-dom'\nimport { fetchLogin } from 'store/api'\nimport { currentUser, loadingAtom } from 'store'\nimport { Container, WelcomeImg, UazLogoImg } from 'styles/auth'\n\nconst Login = ({ history }: RouteChildrenProps): JSX.Element => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [loading] = useAtom(loadingAtom)\n  const [user] = useAtom(currentUser)\n  const [, login] = useAtom(fetchLogin)\n\n  const nonEmpties = [username, password].filter(Boolean).length === 2\n\n  useEffect(() => {\n    if (user.id) {\n      history.push('/')\n    }\n  }, [user, history])\n\n  const onLogin = () => {\n    login({ username, password })\n  }\n\n  return (\n    <Grid columns={3} stackable loading={loading}>\n      <Grid.Row>\n        <Grid.Column />\n        <Grid.Column align=\"center\">\n          <WelcomeImg src={`${process.env.PUBLIC_URL}/assets/img/login/Welcome_login.png`} />\n          <Container>\n            <Form>\n              <FormGroup>\n                <Form.Input\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Form.Input\n                  label=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n            </Form>\n            <Button color=\"blue\" type=\"submit\" disabled={!nonEmpties} onClick={onLogin}>\n              Login\n            </Button>\n          </Container>\n        </Grid.Column>\n        <Grid.Column> </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column> </Grid.Column>\n        <Grid.Column> </Grid.Column>\n        <Grid.Column align=\"right\">\n          <UazLogoImg src=\"/assets/img/login/Uaz_logo.png\" />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default Login\n","const resources = [\n  {\n    name: 'Teacher Resources',\n    url: 'https://www.facebook.com/UAZzacatecas/',\n    image: 'conversation.png',\n    teacherOnly: true\n  },\n  {\n    name: 'TOEFL Practice',\n    url: 'https://www.ets.org/toefl/test-takers/ibt/prepare/tests',\n    image: 'toefl-practices.png',\n    teacherOnly: false\n  }\n]\n\nexport default resources\n","import { atom } from 'jotai'\nimport oas from 'data/oas.json'\nimport resources from 'data/resources'\nimport { isTeacher } from 'store/auth'\nimport { LearningObject } from './types'\n\n// OAs List\nconst oasAtom = atom(oas)\n\n// Resources like 'Teacher Resources' | 'TOEFL Practice'\nconst resourcesAtom = atom((get) => {\n  const teacherInSession = get(isTeacher)\n\n  const allowedActivities = resources.filter((r) => {\n    if (r.teacherOnly) return teacherInSession\n\n    return true\n  })\n\n  return allowedActivities\n})\n\n// List of Levels [ 'A1', 'A2', .. ]\nconst oasNamesAtom = atom(Object.keys(oas))\n\n// Full activities names list\nconst carouselActivitiesAtom = atom((get) => {\n  const resNames = get(resourcesAtom).map((r) => r.name)\n  const oaNames = get(oasNamesAtom).map((title) => `Level ${title}`)\n  return [...resNames, ...oaNames]\n})\n\nconst defaultObject: LearningObject = {\n  level: 'No level',\n  title: 'None',\n  surveyUrl: '/',\n  type: 'Skill'\n}\nconst currentObjectAtom = atom(defaultObject)\n\nexport { oasNamesAtom, oasAtom, currentObjectAtom, carouselActivitiesAtom, resourcesAtom }\n","export const isMobileScreen = (): boolean => window.innerWidth < 770\nexport const capitalize = (cad: string): string =>\n  cad.replace(/(^\\w{1})|(\\s+\\w{1})/g, (letter: string) => letter.toUpperCase())\n","// PALETTON.COM #A78E70\n// https://paletton.com/#uid=70E0u0kaykY4iuN7upkcXgriFdf\nconst pacdiColors = {\n  brown_0: '#A78E70', // Brown color */\n  brown_1: '#F5E6D4',\n  brown_2: '#CAB49B',\n  brown_3: '#836B4E',\n  brown_4: '#6A4D2C',\n\n  golden_0: '#A79870', // Golden color */\n  golden_1: '#F5ECD4',\n  golden_2: '#CABD9B',\n  golden_3: '#83744E',\n  golden_4: '#6A592C',\n\n  purple_0: '#525673', // Purple color */\n  purple_1: '#9698A9',\n  purple_2: '#6F728B',\n  purple_3: '#3B3E5A',\n  purple_4: '#242849',\n\n  blue_0: '#495E6A', // Blue color */\n  blue_1: '#88959C',\n  blue_2: '#647680',\n  blue_3: '#334853',\n  blue_4: '#1E3643'\n}\n\nexport default pacdiColors\n","import styled from 'styled-components'\nimport { Carousel as ReactCarousel } from 'react-responsive-carousel'\nimport pacdiColors from 'styles/common/pacdi_colors'\n\nconst Carousel = styled(ReactCarousel)`\n  .carousel .slide {\n    text-align: left !important;\n  }\n\n  .carousel .control-dots .dot {\n    background: ${pacdiColors.purple_1};\n  }\n`\nexport default Carousel\n","import React from 'react'\nimport { Button } from 'semantic-ui-react'\n\ntype ArrowButtonProps = {\n  disabled: boolean\n  icon: string\n  onClick: () => void\n}\n\nconst ArrowButton = ({ disabled, icon, onClick }: ArrowButtonProps): JSX.Element => (\n  <Button circular disabled={disabled} onClick={onClick} size=\"big\" color=\"olive\" icon={icon} />\n)\n\nexport default ArrowButton\n","import styled from 'styled-components'\n\ntype ContainerProps = {\n  isMobile?: boolean\n  flexDirection: 'initial' | 'column'\n}\n\nconst Container = styled.div<ContainerProps>`\n  display: flex;\n  flex-direction: ${(props) => props.flexDirection};\n  justify-content: ${(props) => (props.isMobile ? 'top' : 'center')};\n  align-items: ${(props) => (props.isMobile ? 'unset' : 'center')};\n  width: 100% !important;\n  height: 100%;\n  background-color: white;\n`\n\nexport default Container\n","import React from 'react'\nimport { Grid, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { useAtom } from 'jotai'\nimport { oasAtom } from 'store/labs/oas'\nimport { ActivityProps, ActivityType, SkillType } from './types'\n\ntype ImageLinkProps = {\n  currentLevel: ActivityType\n  skill: SkillType\n}\n\nconst ImageLink = ({ currentLevel, skill }: ImageLinkProps) => {\n  const [oas] = useAtom(oasAtom)\n\n  const level = oas[currentLevel]\n  const src = `${process.env.PUBLIC_URL}/assets/img/activities/${skill}.png`\n  const disabled = !level[skill].length\n  return (\n    <>\n      {disabled ? (\n        <Image src={src} alt={skill} disabled={disabled} />\n      ) : (\n        <Image as={Link} src={src} alt={skill} to={`/${currentLevel}/${skill}`} />\n      )}\n    </>\n  )\n}\n\nconst ActivityGrid = ({ title }: ActivityProps): JSX.Element => {\n  return (\n    <Grid stackable>\n      <Grid.Row>\n        <Grid.Column width=\"4\">\n          <ImageLink currentLevel={title} skill=\"grammar\" />\n        </Grid.Column>\n        <Grid.Column width=\"2\" />\n        <Grid.Column width=\"4\">\n          <Image src={`${process.env.PUBLIC_URL}/assets/img/activities/${title}.png`} alt={title} />\n        </Grid.Column>\n        <Grid.Column width=\"2\" />\n        <Grid.Column width=\"4\">\n          <ImageLink currentLevel={title} skill=\"listening\" />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column width=\"3\" />\n        <Grid.Column width=\"4\">\n          <ImageLink currentLevel={title} skill=\"reading\" />\n        </Grid.Column>\n        <Grid.Column width=\"2\" />\n        <Grid.Column width=\"4\">\n          <ImageLink currentLevel={title} skill=\"vocabulary\" />\n        </Grid.Column>\n        <Grid.Column width=\"3\" />\n      </Grid.Row>\n    </Grid>\n  )\n}\n\nexport default ActivityGrid\n","import React from 'react'\nimport { List, Image, Divider } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { ActivityProps } from './types'\n\nconst ActivityList = ({ title }: ActivityProps): JSX.Element => (\n  <>\n    <Image\n      src={`${process.env.PUBLIC_URL}/assets/img/activities/${title}.png`}\n      alt={title}\n      size=\"tiny\"\n    />\n    <Divider />\n    <List divided verticalAlign=\"middle\">\n      <List.Item as={Link} to={`/${title}/grammar`}>\n        <Image\n          avatar\n          src={`${process.env.PUBLIC_URL}/assets/img/activities/grammar.png`}\n          alt=\"Grammar\"\n        />\n        <List.Content>\n          <List.Header>Grammar</List.Header>\n        </List.Content>\n      </List.Item>\n      <List.Item as={Link} to={`/${title}/listening`}>\n        <Image\n          avatar\n          src={`${process.env.PUBLIC_URL}/assets/img/activities/listening.png`}\n          alt=\"Listening\"\n        />\n        <List.Content>\n          <List.Header>Listening</List.Header>\n        </List.Content>\n      </List.Item>\n      <List.Item as={Link} to={`/${title}/reading`}>\n        <Image\n          avatar\n          src={`${process.env.PUBLIC_URL}/assets/img/activities/reading.png`}\n          alt=\"Reading\"\n        />\n        <List.Content>\n          <List.Header>Reading</List.Header>\n        </List.Content>\n      </List.Item>\n      <List.Item as={Link} to={`/${title}/vocabulary`}>\n        <Image\n          avatar\n          src={`${process.env.PUBLIC_URL}/assets/img/activities/vocabulary.png`}\n          alt=\"Vocabulary\"\n        />\n        <List.Content>\n          <List.Header>Vocabulary</List.Header>\n        </List.Content>\n      </List.Item>\n    </List>\n    <Divider />\n  </>\n)\n\nexport default ActivityList\n","import React, { useEffect, useState } from 'react'\r\nimport { isMobileScreen } from 'utils'\r\nimport Container from 'styles/App/Activity'\r\nimport ActivityGrid from './ActivityGrid'\r\nimport ActivityList from './ActivityList'\r\nimport { ActivityProps } from './types'\r\n\r\nconst Activity = ({ title }: ActivityProps): JSX.Element => {\r\n  const [isMobile, setIsMobile] = useState(isMobileScreen())\r\n\r\n  const onRezise = () => setIsMobile(isMobileScreen())\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', onRezise, false)\r\n    return () => window.removeEventListener('resize', onRezise)\r\n  }, [])\r\n\r\n  return (\r\n    <Container flexDirection=\"column\" isMobile={isMobile}>\r\n      {isMobile && <ActivityList title={title} />}\r\n      {!isMobile && <ActivityGrid title={title} />}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Activity\r\n","import React from 'react'\nimport { Image } from 'semantic-ui-react'\nimport Container from 'styles/App/Activity'\n\ntype ActivitySimpleType = {\n  title: string\n  url: string\n  image: string\n}\n\nconst ActivitySimple = ({ title, url, image }: ActivitySimpleType): JSX.Element => {\n  return (\n    <Container flexDirection=\"initial\">\n      <Image\n        as=\"a\"\n        href={url}\n        target=\"_blank\"\n        alt={title}\n        src={`${process.env.PUBLIC_URL}/assets/img/activities/${image}`}\n      />\n    </Container>\n  )\n}\n\nexport default ActivitySimple\n","/* eslint-disable react/no-children-prop */\nimport React, { useState, useEffect } from 'react'\nimport { Dropdown, Grid, Segment } from 'semantic-ui-react'\nimport { useAtom } from 'jotai'\nimport { carouselActivitiesAtom, oasNamesAtom, resourcesAtom } from 'store/labs/oas'\nimport { isMobileScreen } from 'utils'\nimport Carousel from 'styles/App/Carousel'\nimport ArrowButton from 'components/Navigation/ArrowButton'\nimport Activity from './Activity'\nimport ActivitySimple from './Activity/ActivitySimple'\nimport { ActivityType } from './Activity/types'\n\ntype OptionType = {\n  key: string\n  text: string\n  value: number\n}\n\nconst Main = (): JSX.Element => {\n  const [current, setCurrent] = useState(0)\n  const [isMobile, setIsMobile] = useState(isMobileScreen())\n\n  const [activityNames] = useAtom(carouselActivitiesAtom) // [ \"TOEFL Practice\", \"A1\", ...]\n  const [oaNames] = useAtom(oasNamesAtom) // [ \"A1\", \"A2\", ... ]\n  const [resources] = useAtom(resourcesAtom) // [ {..}, {..} ...]\n\n  const onRezise = () => setIsMobile(isMobileScreen())\n\n  useEffect(() => {\n    window.addEventListener('resize', onRezise, false)\n    const currentLS = localStorage.getItem('ActivityIndex')\n    const index = currentLS ? Number(currentLS) : 0\n    setCurrent(index)\n\n    return () => window.removeEventListener('resize', onRezise)\n  }, [])\n\n  const options: OptionType[] = activityNames.map((key, index) => ({\n    key,\n    text: key,\n    value: index\n  }))\n\n  const OPTIONS_SIZE = activityNames.length\n  const onChangeItem = (index: number) => {\n    setCurrent(index)\n    localStorage.setItem('ActivityIndex', `${index}`)\n  }\n  const previous = () => setCurrent(current - 1)\n  const next = () => setCurrent(current + 1)\n\n  const resourcesList = () =>\n    resources.map((r) => <ActivitySimple key={r.name} title={r.name} url={r.url} image={r.image} />)\n\n  const OAList = () =>\n    oaNames.map((activity: ActivityType | any) => <Activity key={activity} title={activity} />)\n\n  return (\n    <>\n      <Carousel\n        emulateTouch={isMobile}\n        useKeyboardArrows\n        showThumbs={false}\n        showArrows={false}\n        selectedItem={current}\n        showStatus={false}\n        onChange={onChangeItem}\n        children={[...resourcesList(), ...OAList()]}\n      />\n\n      {isMobile && (\n        <Segment textAlign=\"center\">\n          <Dropdown\n            selection\n            value={current}\n            options={options}\n            onChange={(e, { value }) => {\n              if (typeof value === 'number') onChangeItem(value)\n            }}\n          />\n        </Segment>\n      )}\n      {!isMobile && (\n        <Segment>\n          <Grid columns={3} textAlign=\"center\">\n            <Grid.Row>\n              <Grid.Column>\n                <ArrowButton icon=\"angle left\" disabled={current === 0} onClick={previous} />\n              </Grid.Column>\n              <Grid.Column>\n                <Dropdown\n                  selection\n                  value={current}\n                  options={options}\n                  onChange={(e, { value }) => {\n                    if (typeof value === 'number') onChangeItem(value)\n                  }}\n                />\n              </Grid.Column>\n              <Grid.Column>\n                <ArrowButton\n                  icon=\"angle right\"\n                  disabled={current === OPTIONS_SIZE - 1}\n                  onClick={next}\n                />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      )}\n    </>\n  )\n}\n\nexport default Main\n","import pacdiColors from './pacdi_colors'\n\nconst colors = {\n  blue: '#009dff',\n  ...pacdiColors\n}\n\nconst backgrounds = {\n  bgLightBrown: colors.brown_1,\n  bgContentLight: `#F67879`,\n  bgContentLightest: `#FDDAD2`\n}\n\nexport { colors, backgrounds }\n","import styled from 'styled-components'\nimport { NavLink as Link } from 'react-router-dom'\nimport { colors } from 'styles/common/variables'\nimport { Button, Menu } from 'semantic-ui-react'\n\nconst NavMenu = styled(Menu)`\n  margin: 0 !important;\n`\n\nconst NavLink = styled(Link)`\n  font-size: 1.1rem;\n  height: 100%;\n\n  &.active,\n  &:hover {\n    border-color: ${colors.blue} !important;\n  }\n`\nconst LogoNavImage = styled.img`\n  width: 200px !important;\n`\n\nconst RightFloatButton = styled(Button)`\n  position: absolute;\n  right: 0;\n  margin: 0 !important;\n`\n\nexport { NavLink, NavMenu, LogoNavImage, RightFloatButton }\n","import React from 'react'\nimport { Menu, Dropdown } from 'semantic-ui-react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { useAtom } from 'jotai'\nimport { LogoNavImage, NavLink, NavMenu } from 'styles/App'\nimport { logout, isLoggedIn, currentUser } from 'store'\n\nconst Navigation = (): JSX.Element => {\n  const [loggedIn] = useAtom(isLoggedIn)\n  const [, logoutUser] = useAtom(logout)\n  const [user] = useAtom(currentUser)\n\n  return (\n    <NavMenu pointing secondary>\n      <Menu.Item name=\"home\" as={NavLink} to=\"/\" exact>\n        <LogoNavImage src={`${process.env.PUBLIC_URL}/assets/img/PACDI.jpg`} />\n      </Menu.Item>\n      <Menu.Menu position=\"right\">\n        {loggedIn ? (\n          <Dropdown text={`${user.name} ${user.lastname}`} pointing className=\"link item\">\n            <Dropdown.Menu>\n              <Dropdown.Item as={Link} to=\"/my-account\">\n                My Account\n              </Dropdown.Item>\n\n              <Dropdown.Item as={Link} to=\"/\" onClick={logoutUser}>\n                Logout\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        ) : (\n          <Menu.Item name=\"login\" as={NavLink} to=\"/login\" />\n        )}\n      </Menu.Menu>\n    </NavMenu>\n  )\n}\n\nexport default withRouter(Navigation)\n","import { useAtom } from 'jotai'\nimport React from 'react'\nimport { Segment } from 'semantic-ui-react'\nimport { currentUser } from 'store'\n\nconst Account = (): JSX.Element => {\n  const [user] = useAtom(currentUser)\n  return (\n    <Segment>\n      <h1>Account</h1>\n      <p>id: {user.id}</p>\n      <p>name: {user.name}</p>\n      <p>lastname: {user.lastname}</p>\n      <p>username: {user.username}</p>\n      <p>Type: {user.type}</p>\n    </Segment>\n  )\n}\n\nexport default Account\n","import React from 'react'\n\ntype IFrameProps = {\n  src: string\n}\n\nconst { innerWidth: width, innerHeight: height } = window\nconst IFrame = ({ src }: IFrameProps): JSX.Element => {\n  return <iframe title=\"activity\" src={src} width={width} height={height - 130} />\n}\n\nexport default IFrame\n","import styled from 'styled-components'\n\nconst SpacedContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`\n\nexport default SpacedContainer\n","import React from 'react'\nimport { Header, List, Image } from 'semantic-ui-react'\n\nconst closeActivitySrc = `/assets/img/close-activity.png`\nconst activityValidationSrc = `/assets/img/activity-validation.png`\n\nexport type MessageProps = {\n  surveyUrl: string\n}\n\nconst InstructionsMessage = ({ surveyUrl }: MessageProps): JSX.Element => {\n  const hasLink = surveyUrl && surveyUrl.length > 1\n\n  return (\n    <>\n      {hasLink && (\n        <div>\n          <p>\n            When you finish the exercises, close the activity window to answer the questionnaire\n            that validates your work, as the example below.\n          </p>\n          <Image src={closeActivitySrc} size=\"huge\" alt=\"close-activity\" centered />\n        </div>\n      )}\n\n      {!hasLink && (\n        <div>\n          <p>\n            When you finish the exercises, please be sure to answer the questionnaire that validates\n            your work.\n          </p>\n          <Image src={activityValidationSrc} size=\"huge\" alt=\"activity-validation\" centered />\n        </div>\n      )}\n    </>\n  )\n}\n\nconst WorkCompleteMessage = ({ surveyUrl }: MessageProps): JSX.Element => {\n  const hasLink = surveyUrl && surveyUrl.length > 1\n\n  return (\n    <div>\n      <Header as=\"h5\">Did you complete the activities?</Header>\n      <List as=\"ul\">\n        <List.Item as=\"li\">\n          {hasLink && (\n            <div>\n              Answer\n              <strong>\n                <a href={surveyUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                  this questionnaire\n                </a>{' '}\n              </strong>\n              to validate your work\n            </div>\n          )}\n\n          {!hasLink && <InstructionsMessage surveyUrl={surveyUrl} />}\n        </List.Item>\n      </List>\n    </div>\n  )\n}\n\nexport { InstructionsMessage, WorkCompleteMessage }\n","import React, { useEffect, useState } from 'react'\nimport IFrame from 'components/activities/utils/IFrame'\nimport { useAtom } from 'jotai'\nimport { currentObjectAtom } from 'store/labs/oas'\nimport { Button, Divider, Header, Image, Segment } from 'semantic-ui-react'\nimport { RightFloatButton } from 'styles/App'\nimport { RouteChildrenProps } from 'react-router-dom'\nimport SpacedContainer from 'styles/common'\nimport { capitalize } from 'utils'\nimport { InstructionsMessage, WorkCompleteMessage } from './InstructionsMessage'\n\nconst learningBannerSrc = `/assets/img/learining-banner.jpg`\n\nconst ObjectDetail = ({ history }: RouteChildrenProps): JSX.Element => {\n  const [isObjectOpen, setIsObjectOpen] = useState(false)\n  const [finished, setFinished] = useState(false)\n  const [currentOA] = useAtom(currentObjectAtom)\n\n  useEffect(() => {\n    console.log('Object:', currentOA)\n    // if (!currentOA.id) history.push('/a1')\n  }, [history, currentOA])\n\n  const openObject = () => setIsObjectOpen(true)\n\n  const closeObject = () => {\n    setIsObjectOpen(false)\n    setFinished(true)\n  }\n\n  return (\n    <div>\n      {currentOA.path && isObjectOpen && (\n        <Segment style={{ paddingTop: 0 }}>\n          <RightFloatButton secondary icon=\"close\" onClick={closeObject} />\n          <IFrame src={currentOA.path} />\n        </Segment>\n      )}\n\n      {!isObjectOpen && (\n        <Segment>\n          <SpacedContainer>\n            <Header>\n              {currentOA.level}: {capitalize(currentOA.type)} - {currentOA.title}\n            </Header>\n            <Image src={learningBannerSrc} size=\"medium\" alt=\"banner\" verticalAlign=\"middle\" />\n          </SpacedContainer>\n          <Divider fitted />\n\n          <Segment basic textAlign=\"center\">\n            <Segment.Group compact>\n              <Segment color=\"teal\" secondary>\n                {!finished && <InstructionsMessage surveyUrl={currentOA.surveyUrl} />}\n\n                {finished && <WorkCompleteMessage surveyUrl={currentOA.surveyUrl} />}\n              </Segment>\n              <Divider fitted />\n              <Segment basic textAlign=\"left\">\n                {currentOA.id && (\n                  <Button color=\"olive\" onClick={openObject}>\n                    {finished ? 'Start over!' : 'Begin!'}\n                  </Button>\n                )}\n              </Segment>\n            </Segment.Group>\n          </Segment>\n        </Segment>\n      )}\n    </div>\n  )\n}\n\nexport default ObjectDetail\n","import React from 'react'\nimport { useAtom } from 'jotai'\nimport { currentObjectAtom, oasAtom } from 'store/labs/oas'\nimport { Divider, Header, Image, List, Segment } from 'semantic-ui-react'\nimport { LearningObject } from 'store/labs/types'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { capitalize } from 'utils'\nimport SpacedContainer from 'styles/common'\nimport { ActivityType, SkillType } from 'components/Main/Activity/types'\n\ntype ObjectListParams = {\n  list: LearningObject[]\n}\n\ntype MatchParams = {\n  level: ActivityType\n  skill: SkillType\n}\n\nconst learningBannerSrc = `/assets/img/learining-banner.jpg`\n\nconst ActivityList = ({ history, match }: RouteComponentProps<MatchParams>): JSX.Element => {\n  const [oas] = useAtom(oasAtom)\n\n  const { level, skill } = match.params\n\n  const listOAs = oas[level][skill]\n  const [, setCurrentOA] = useAtom(currentObjectAtom)\n\n  const setCurrentObject = (object: LearningObject) => {\n    setCurrentOA(object)\n    history.push(`${skill}/object-detail`)\n  }\n\n  const ObjectList = ({ list }: ObjectListParams): JSX.Element => {\n    return (\n      <List>\n        {list.map((object) => (\n          <List.Item\n            key={object.id}\n            onClick={() => setCurrentObject(object)}\n            style={{ cursor: 'pointer' }}\n          >\n            <List.Icon name=\"angle right\" />\n            <List.Content>\n              <List.Header>{object.title}</List.Header>\n            </List.Content>\n            <Divider />\n          </List.Item>\n        ))}\n      </List>\n    )\n  }\n\n  return (\n    <div>\n      <Segment>\n        <SpacedContainer>\n          <Header>\n            {level}: {capitalize(skill)}\n          </Header>\n          <Image src={learningBannerSrc} size=\"medium\" alt=\"banner\" verticalAlign=\"middle\" />\n        </SpacedContainer>\n\n        <Divider fitted />\n\n        <ObjectList list={listOAs} />\n      </Segment>\n    </div>\n  )\n}\n\nexport default ActivityList\n","import React, { Suspense } from 'react'\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport { Provider } from 'jotai'\nimport Login from 'components/Auth/Login/Login'\nimport Main from 'components/Main/Main'\nimport Navigation from 'components/Navigation/Navigation'\nimport UserAccount from 'components/UserAccount/UserAccount'\nimport ObjectDetail from 'components/activities/laboratories/ObjectDetail/ObjectDetail'\nimport ActivityList from 'components/activities/laboratories/ActivityList'\n\nconst AppRouter = (): JSX.Element => (\n  <Router basename={process.env.REACT_APP_ROUTER_BASE || ''}>\n    <Suspense fallback={<span>Loading</span>}>\n      <Provider>\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route exact path=\"/:level/:skill\" component={ActivityList} />\n          <Route path=\"/:level/:skill/object-detail\" component={ObjectDetail} />\n          <Route exact path=\"/my-account\" component={UserAccount} />\n          <Route path=\"/login\" component={Login} />\n        </Switch>\n      </Provider>\n    </Suspense>\n  </Router>\n)\n\nexport default AppRouter\n","import React from 'react'\nimport AppRouter from 'components/routes/AppRouter'\n\nfunction App(): JSX.Element {\n  return <AppRouter />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}